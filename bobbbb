#!/bin/bash

nick="$(basename $0)"
host="$1"
port="$2"
chan="$3"

if [ ! "$2" ]; then
	echo "usage: $(basename $0) host port"
	exit 1
fi

if ! exec 3<> /dev/tcp/$host/$port; then
	echo "$(basename $0): unable to connect to $host:$port"
	exit 1
fi

exec <&3 >&3-

echo "USER $nick $nick $nick :$nick"
echo "NICK $nick"
echo "JOIN $chan"

while read line; do
	[[ "$line" =~ ^PING\ :(.*)$ ]] && echo "PONG :${BASH_REMATCH[1]}"
	
	if [[ "$line" =~ ^:([^\!]*)\!([^\ ]*)\ ([^\ ]*)\ ([^:]*)(\ :(.*))?$ ]]; then
		sender=${BASH_REMATCH[1]}
		server=${BASH_REMATCH[2]}
		command=${BASH_REMATCH[3]}
		args=(${BASH_REMATCH[4]})
		contents=${BASH_REMATCH[6]}

		case $command in
		KICK) [[ ${args[1]} == $nick ]] && echo "JOIN ${args[0]}" ;;
		PART) [[ $sender == $nick ]] && echo "JOIN ${args[0]}" ;;
		MODE)
		# :JoshDreamland!~josh@d118-75-93-174.try.wideopenwest.com MODE #enigma-dev +b bobbbb!*@* 
			if [[ "${args[1]}" == +b && "${args[2]}" =~ ^$nick ]]; then
				nick="$(basename $0)$RANDOM"
				echo "PART $chan"
				echo "NICK $nick"
				echo "JOIN $chan"
			fi
			;;

		PRIVMSG)
			[[ ${args[0]} == $chan ]] && echo "$contents" >> "logs/$sender"

			if [[ $contents =~ ^\!([^\ ]+)\ (.*) ]]; then
				case ${BASH_REMATCH[1]} in
				mock)
					name=${BASH_REMATCH[2]//[^-a-zA-Z0-9\[\]\\\`_^\{\}|]}
					text=$(./markov -d 1 -n 20 < "logs/$name" | tr '\r\n' ' ')
					echo "PRIVMSG $chan :\"$text\" -- $name"
					;;
				esac
			fi
			;;
		esac
	fi
done
